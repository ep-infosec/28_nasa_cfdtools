      SUBROUTINE DTGELE ( A, NROW, N, B, WORK, NWORK, RCOND, IER )
         INTEGER NROW, N, NWORK, IER
         DOUBLE PRECISION  A(NROW,*), B(*), RCOND
         DOUBLE PRECISION  WORK(*)
C
C*********************************************************************
C
C PURPOSE   DTGELE SOLVES AX=B FOR X WHERE A IS AN N BY N DOUBLE
C           GENERAL, DENSE MATRIX.  DTGELE ALLOWS ONLY A SINGLE RIGHT
C           HAND SIDE VECTOR B- MULTIPLE RIGHT HAND SIDES CAN BE
C           SOLVED ECONOMICALLY BY USING DTGESL IN CONJUNCTION WITH
C           DTGELE.
C
C METHOD    DTGELE USES LINPACK SUBROUTINE DGECO WHICH USES GAUSSIAN
C           ELIMINATION WITH PARTIAL PIVOTING TO COMPUTE THE LU
C           FACTORIZATION OF A WHERE L IS AN ELEMENTARY LOWER
C           TRIANGULAR MATRIX AND U IS AN UPPER TRIANGULAR MATRIX.
C           AN ESTIMATE OF THE RECIPROCAL CONDITION NUMBER, RCOND,
C           IS THEN COMPUTED.  IF THE MATRIX A IS NOT SINGULAR LINPACK
C           SUBROUTINE DGESL IS CALLED TO COMPUTE THE SOLUTION X.
C
C REMARK    TO COMPUTE ADDITIONAL SOLUTIONS INVOLVING THE SAME MATRIX
C           A BUT DIFFERENT RIGHT HAND SIDES FOLLOW THE USE OF DTGELE
C           WITH SUBROUTINE DTGESL.  FOR POSSIBLE ECONOMIES OF STORAGE
C           AND/OR COMPUTATION, FOR APPLICABILITY OF MORE SPECIALIZED
C           ROUTINES, OR FOR INVERSES OR DETERMINANTS OF MATRICES, SEE
C           INTRODUCTION TO LINEAR ALGEBRA SECTION.
C
C USAGE     DOUBLE PRECISION  A(NROW,N), B(N), WORK(NWORK)
C           CALL DTGELE ( A, NROW, N, B, WORK, NWORK, RCOND, IER )
C
C INPUT     A         DOUBLY SUBSCRIPTED ARRAY WHICH CONTAINS THE
C                     MATRIX.
C
C           NROW      ROW DIMENSION OF THE ARRAY A WHICH MUST BE
C                     AT LEAST N.  (SEE INTRODUCTION TO LINEAR
C                     ALGEBRA SECTION FOR FURTHER DETAILS)
C
C           N         ORDER OF THE MATRIX A AND THE LENGTH OF THE
C                     RIGHT HAND SIDE COLUMN VECTOR B.
C
C           B         ARRAY WHICH CONTAINS THE RIGHT HAND SIDE
C                     COLUMN VECTOR B.
C
C WORKING   WORK      WORK VECTOR OF LENGTH NWORK.  THIS VECTOR
C STORAGE             SHOULD BE PRESERVED IF OTHER LINEAR SYSTEMS
C                     WITH THE SAME COEFFICIENT MATRIX ARE TO BE
C                     SOLVED (SEE DTGESL).
C
C           NWORK     THE LENGTH OF THE VECTOR WORK WHICH MUST BE AT
C                     LEAST 2*N .
C
C  OUTPUT   A         IF IER .GE. 0 OR IER = -4, THEN A HAS BEEN
C                     OVERWRITTEN WITH ITS L*U FACTORIZATION.
C                     OTHERWISE A IS UNCHANGED.  THIS ARRAY SHOULD
C                     BE PRESERVED IF OTHER LINEAR SYSTEMS WITH THE
C                     SAME COEFFICIENT MATRIX ARE TO BE SOLVED (SEE
C                     DTGESL).
C
C           B         IF IER .GE. 0, THEN B HAS BEEN OVERWRITTEN
C                     WITH THE COMPUTED SOLUTION.  OTHERWISE IT IS
C                     UNCHANGED.
C
C           RCOND     ESTIMATE OF THE RECIPROCAL OF THE CONDITIN
C                     NUMBER OF THE MATRIX A.  IF RCOND IS SO SMALL
C                     THAT THE LOGICAL EXPRESSION  1.0 + RCOND = 1.0
C                     IS TRUE, THEN A CAN USUALLY BE REGARDED AS
C                     SINGULAR TO WORKING PRECISION.  (SEE INTRO-
C                     DUCTION TO LINEAR ALGEBRA SECTION FOR FURTHER
C                     DETAILS.)
C
C           IER       SUCCESS/ERROR CODE WHICH COMMUNICATES TO THE
C                     USER SUCCESS, WARNINGS, OR ERRORS.  POSSIBLE
C                     RETURN VALUES ARE
C
C                     IER =  0, NORMAL RETURN
C                         =  1, SOLUTION HAS BEEN COMPUTED BUT A
C                               IS POORLY CONDITIONED
C                         =  2, SOLUTION HAS BEEN COMPUTED BUT A
C                               IS BADLY CONDITIONED
C                         = -1, N IS LESS THAN 1
C                         = -2, NROW IS LESS THAN N
C                         = -3, NWORK IS LESS THAN 2*N
C                         = -4, MATRIX IS EXACTLY SINGULAR, NO
C                               WAS COMPUTED.
C
C
C  WRITTEN BY ROGER G. GRIMES ON SEPTEMBER 7, 1979
C ...        MODIFIED BY KAREN J. EKBLAD DECEMBER 1985
C
C*********************************************************************
C
C ... EXTERNAL SUBROUTINES CALLED ARE
C
C           DLOG10, DTMCON, DTERR, DGECO, DGESL
C
C
C ... INTERNAL VARIABLES
C
      DOUBLE PRECISION    DIGCAL, DIGMAX, MACHEP, DLOG10, DTMCON
      CHARACTER*8 NAME
      INTEGER IPVT, NEED
C
C ... INITIALIZE THE ERROR MESSAGE ARRAYS
C
      DATA NAME/'DTGELE'/
C
C
C ... TEST INITIAL PARAMETERS
C
         IER = 0
         RCOND = 0.0D0
         IF (N .GE. 1) GO TO 10
            IER = -1
            CALL DTERR ( 1, NAME, IER, 1 )
            GO TO 70
C
  10     IF ( NROW .GE. N ) GO TO 20
            IER = -2
            CALL DTERR ( 1, NAME, IER, 1)
            GO TO 70
C
  20     IF ( NWORK .GE. 2*N  ) GO TO 30
            NEED = 2*N
            IER = -3
            CALL DTERR ( 2, NAME, IER, NEED )
            GO TO 70
C
C ...  FACTOR A
C
  30     IPVT = 1 + N
         CALL DGECO ( A, NROW, N, WORK(IPVT), RCOND, WORK )
C
C ... INITIALIZE WORK(1) SO THAT ERROR MESSAGE VALUES CAN BE STORED
C
         WORK(1) = 0.D0
C
C ... TEST FOR EXACT SINGULARITY AND ILL CONDITIONING OF THE
C ... MATRIX
C
         IF ( RCOND .NE. 0.0D0 ) GO TO 40
            IER = -4
            CALL DTERR ( 3, NAME, IER, 1 )
            GO TO 70
C
  40     MACHEP = DTMCON ( 5 )
         DIGMAX = -DLOG10 ( MACHEP )
         DIGCAL = -DLOG10 ( RCOND )
         IF ( 3.0D0 * DIGCAL .LT.         DIGMAX ) GO TO 60
         IF ( 3.0D0 * DIGCAL .LT. 2.0D0 * DIGMAX ) GO TO 50
C
C ... MATRIX IS BADLY CONDITIONED
C
            IER = 2
            CALL DTERR( 0, NAME, IER, 1 )
            CALL DTJINT ( WORK, 1, IER )
            GO TO 60
C
C ... MATRIX IS POORLY CONDITIONED
C
  50        IER = 1
            CALL DTERR ( 0, NAME, IER, 1 )
            CALL DTJINT ( WORK, 1, IER )
C
C ... SOLVE THE MATRIX EQUATIONS
C
  60     CALL DGESL ( A, NROW, N, WORK(IPVT), B, 0 )
C
C ... END OF THE SUBROUTINE
C
  70     CONTINUE
         RETURN
      END
