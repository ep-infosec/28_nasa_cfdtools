      SUBROUTINE DTSFAR (C, ERRTOL, WORK, NWORK, AREA, IER)

C   COMPUTE THE SURFACE AREA OF A SPLINE SURFACE IN SPACE.
C     COMPUTES THE DOUBLE INTEGRAL OF THE ABSOLUTE VALUE OF THE CROSS
C     PRODUCT OF THE FIRST PARTIAL DERIVATIVES OVER THE FULL PARAMETER 
C     SPACE.  USES DTDIGL FOR THE DOUBLE INTEGRATION.
C
C   INPUT:
C     C       THE SPLINE SURFACE DATA ARRAY.
C     ERRTOL  THE ALLOWABLE RELATIVE ERROR IN AREA.
C   WORKSPACE:
C     WORK    WORK ARRAY OF length NWORK.
C     NWORK   LENGTH OF WORK ARRAY.  IT IS SUFFICIENT FOR
C             NWORK >= 4*KMAX**2 + 2*KMAX + 6,
C             WHERE KMAX = MAX(C(3),C(4)).
C   OUTPUT:
C     AREA    THE COMPUTED AREA.
C     IER     ERROR FLAG.  AREA IS DTMCON(1) WHEN IER < 0.
C
C   CALLS:
C     DTDIGL
C     DTERR
C     DTGET
C     DTMCON
C   USES DTSFA1 AS ARGUMENT TO DTDIGL
C*****
      INTEGER NWORK, IER
      DOUBLE PRECISION C(*), ERRTOL, WORK(NWORK), AREA
C
C   LOCAL VARIABLES
      EXTERNAL DTSFA1
      DOUBLE PRECISION DTSFA1, PLO(2), PHI(2), TOL, ERREST
      DOUBLE PRECISION DNWORK, SPATCH, ULO, UHI, VLO, VHI
      INTEGER N, MRAW, M, KORD(2), NCOEF(2), KMAX, NEED
      INTEGER K1BEG, K1END, K2BEG, K2END
      INTEGER I, J
C
      DOUBLE PRECISION DTMCON
      CHARACTER*8 SUBNAM
      DATA SUBNAM /'DTSFAR  '/
C
C   GET SPLINE PARAMETERS
      CALL DTGET (C, .TRUE., 2, N, MRAW, M, KORD, NCOEF, PLO, PHI, IER)
      IF (IER .NE. 0) GO TO 9900
      IF (N .NE. 2) GO TO 9001
      IF (M .NE. 3) GO TO 9002
      KMAX = MAX (KORD(1), KORD(2))
      NEED = KMAX*(4*KMAX + 2) + 6
      IF (NWORK .LT. NEED) GO TO 9006
      DNWORK = DBLE (NWORK)
C
      K1BEG = 2 + 3*N + KORD(1) + 1
      K1END = K1BEG + NCOEF(1) - KORD(1)
      K2BEG = K1BEG + NCOEF(1) + KORD(2)
      K2END = K2BEG + NCOEF(2) - KORD(2)
C
C   DO THE INTEGRATION, ONE CONTINUOUS PATCH AT A TIME
      TOL = ERRTOL
      IF (ERRTOL .LE. 0.0D0) TOL = 0.0001D0
      AREA = 0.0D0
      ULO = PLO(1)
      DO 200 I=K1BEG,K1END
        IF (ULO .LT. C(I) .AND. C(I) .EQ. C(I+KORD(1)-2)) THEN
C         KNOT IS HIGH ENOUGH ORDER TO MAKE DISCONTINUITY IN INTEGRAND
C         SUBDIVIDE INTEGRAL AT THIS POINT
          UHI = C(I)
          VLO = PLO(2)
          DO 100 J=K2BEG,K2END
            IF (VLO .LT. C(J) .AND. C(J) .EQ. C(J+KORD(2)-2)) THEN
C             KNOT IS HIGH ENOUGH ORDER TO MAKE DISCONTINUITY IN INTEGRAND
C             SUBDIVIDE INTEGRAL AT THIS POINT
              VHI = C(J)
              CALL DTDIGL (ULO, UHI, .TRUE., VLO, DTSFA1, 
     +            .TRUE., VHI, DTSFA1, DTSFA1, C, WORK, DNWORK, 
     +            TOL, 20, SPATCH, ERREST, IER)
C             THE FIRST TWO USES OF DTSFA1 AS AN ARGUMENT ARE JUST CONVENIENT
C             PLACEHOLDERS OF THE PROPER SIZE TO BE EXTERNALS.  THE THIRD
C             USE IS THE REAL USE AS THE INTEGRAND FUNCTION.
              IF (IER .NE. 0) GO TO 9099
              AREA = AREA + SPATCH
              VLO = VHI
            END IF
  100     CONTINUE
          ULO = UHI
        END IF
  200 CONTINUE
      RETURN
C
C   ERROR EXITS
C   NOT A SURFACE
 9001 IER = -1
      GO TO 9900
C   NOT IN 3D SPACE
 9002 IER = -2
      GO TO 9900
C   INSUFFICIENT WORKSPACE
 9006 IER = -6
      CALL DTERR (2, SUBNAM, IER, NEED)
      GO TO 9990
C   PROBLEM IN DTDIGL
 9099 IER = -99
      CALL DTERR (4, SUBNAM, IER, 0)
      GO TO 9990
C   COMMON ERROR MESSAGE
 9900 CONTINUE
      CALL DTERR (1, SUBNAM, IER, 0)
 9990 CONTINUE
      AREA = DTMCON(1)
      RETURN
      END
