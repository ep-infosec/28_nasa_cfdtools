      SUBROUTINE DTLSLE (A, NDIM, N, M, B, RSD, HOLD, NHOLD, RPERT, IER)
         INTEGER NDIM, N, M, NHOLD, IER
         DOUBLE PRECISION    A(NDIM,*), B(*), RSD(*), RPERT, HOLD(*)
C
C*********************************************************************
C
C PURPOSE   DTLSLE SOLVES AX=B FOR X WHERE A IS AN N BY M DOUBLE
C           PRECISION GENERAL MATRIX WITH M LESS THAN N. DTLSLE COMPUTES
C           THE LEAST SQUARES SOLUTION TO THIS OVERDETERMINED LINEAR
C           SYSTEM, I.E. THE SOLUTION VECTOR X MINIMIZES
C           THE EUCLIDEAN NORM OF B - A * X .
C           DTLSLE ALLOWS ONLY A SINGLE RIGHT HAND SIDE VECTOR B.
C           MULTIPLE RIGHT HAND SIDES CAN BE SOLVED ECONOMICALLY
C           BY USING DTLSSL IN CONNECTION WITH DTLSLE.
C
C METHOD    DTLSLE  USES LINPACK SUBROUTINE DQRDC WHICH USES
C           HOUSEHOLDER REFLECTIONS TO COMPUTE THE
C           QR DECOMPOSITION OF A, WHERE Q IS AN ORTHOGONAL MATRIX AND R
C           IS AN UPPER TRINGULAR MATRIX. LINPACK SUBROUTINE DQRSL IS
C           USED TO COMPUTE THE SOLUTION. IF THE MATRIX A HAS LESS THAN
C           M LINEARLY INDEPENDENT COLUMNS, NO SOLUTION IS COMPUTED.
C           AN ESTIMATE OF THE CONDITIONING OF THE PROBLEM IS RETURNED
C           IN RPERT.
C
C REMARK    TO COMPUTE ADDITIONAL SOLUTIONS INVOLVING THE SAME MATRIX
C           A BUT DIFFERENT RIGHT HAND SIDES FOLLOW THE USE OF DTLSLE
C           WITH SUBROUTINE DTLSSL.  FOR POSSIBLE ECONOMIES OF STORAGE
C           AND/OR COMPUTATION, FOR APPLICABILITY OF MORE SPECIALIZED
C           ROUTINES, OR FOR PSEUDOINVERSES OR UNDERDETERMINED SYSTEMS,
C           LINPACK.
C
C USAGE     DOUBLE PRECISION  A(NDIM,M), B(N), HOLD(NHOLD)
C           CALL DTLSLE ( A, NDIM, N, M, B, RSD, HOLD, NHOLD, RPERT,IER)
C
C INPUT     A         DOUBLY SUBSCRIPTED ARRAY WHICH CONTAINS THE
C                     MATRIX.
C
C           NDIM      ROW DIMENSION OF THE ARRAY A WHICH MUST BE
C                     AT LEAST N.  (SEE INTRODUCTION TO LINEAR
C                     ALGEBRA SECTION FOR FURTHER DETAILS)
C
C           N         NUMBER OF ROWS IN A , THE LENGTH OF THE
C                     RIGHT HAND SIDE COLUMN VECTOR B, AND
C                     THE LENGTH OF THE RESIDUAL VECTOR RSD.
C
C           M         NUMBER OF COLUMNS IN A AND THE LENGTH OF THE
C                     SOLUTION VECTOR.
C
C           B         ARRAY WHICH CONTAINS THE RIGHT HAND SIDE
C                     COLUMN VECTOR B.
C
C WORKING   HOLD      WORK VECTOR OF LENGTH NHOLD.  THIS VECTOR
C STORAGE             SHOULD BE PRESERVED IF OTHER LINEAR SYSTEMS
C                     WITH THE SAME COEFFICIENT MATRIX ARE TO BE
C                     SOLVED (SEE DTLSSL).
C
C           NHOLD     THE LENGTH OF THE VECTOR HOLD WHICH MUST BE AT
C                     LEAST   M+2.
C
C  OUTPUT   A         IF IER .GE. 0 OR IER .EQ. -5  THEN A HAS BEEN
C                     OVERWRITTEN WITH ITS Q*R FACTORIZATION.
C                     OTHERWISE A IS UNCHANGED.  THIS ARRAY SHOULD
C                     BE PRESERVED IF OTHER LINEAR SYSTEMS WITH THE
C                     SAME COEFFICIENT MATRIX ARE TO BE SOLVED (SEE
C                     DTLSSL).
C
C           B         IF IER .GE. 0, THEN THE FIRST M ENTRIES OF B HAVE
C                     BEEN OVERWRITTEN WITH THE COMPUTED SOLUTION.
C                     OTHERWISE IT IS UNCHANGED.
C
C           RSD       IF IER .GE. 0, THEN RSD CONTAINS THE RESIDUAL
C                     VECTOR B - A * X .
C
C           RPERT     ESTIMATE OF THE  CONDITIONING OF THE PROBLEM. IF
C                     RPERT IS VERY SMALL THE COMPUTED SOLUTION MAY BE
C                     VERY SENSITIVE TO PERTURBATIONS IN A AND B.
C
C           IER       SUCCESS/ERROR CODE WHICH COMMUNICATES TO THE
C                     USER SUCCESS, WARNINGS, OR ERRORS.
C                     IF IER .LT. 0 THEN DTLSLE SETS RSD(1) = DTMCON(1).
C                     POSSIBLE RETURN VALUES ARE
C
C                     IER =  0, NORMAL RETURN
C                         =  1, SOLUTION HAS BEEN COMPUTED BUT IS
C                               SENSITIVE TO  PERTURBATIONS IN A AND B.
C                         =  2, SOLUTION HAS BEEN COMPUTED BUT IS VERY
C                               SENSITIVE TO PERTURBATIONS IN A AND B.
C                         = -1, N IS LESS THAN 1
C                         = -2, NDIM IS LESS THAN N
C                         = -3, M IS LESS THAN 1 OR GREATER THAN N
C                         = -4, NHOLD IS LESS THAN   M+2
C                         = -5, COLUMN RANK OF A IS LESS THAN M
C
C  WRITTEN BY HORST D. SIMON ON OCTOBER 3, 1983
C              MODIFIED 6/28/86 BY A. B. LESTER
C              TO CONFORM TO FORTRAN 77 STANDARDS.
C*********************************************************************
C
C ... EXTERNAL SUBROUTINES CALLED ARE
C
C     FORTRAN INTRINSIC
C        DOUBLE PRECISION  ABS,  MAX ,  MIN ,  LOG10
C        REAL SNGL
C
C     DTRC SUBROUTINES
C        DTERR
C
C     LINPACK SUBROUTINES
C        DTIDMX, DASUM, DQRDC, DQRSL
C
      DOUBLE PRECISION DTMCON, DASUM
      INTEGER DTIDMX
C
C
C
C ... INTERNAL VARIABLES
C
      CHARACTER*8 SNAME
      DOUBLE PRECISION    BNRM, COLMAX, DIGCAL, DIGMAX, DUM(1), RMIN,
     1        RMAX, RNRM, XNRM
      INTEGER  IBEG, IEND, IMAX, J, JDUM(1), NEED
C
C ... INITIALIZE THE ERROR MESSAGE ARRAYS
C
      PARAMETER (SNAME='DTLSLE')
C
C ... INITIALIZE WORK SPACE
C
      IBEG = 1
C
      IEND = IBEG +   M
C
C ... TEST INITIAL PARAMETERS
C
      IER = 0
      RPERT = 0.0D0
      HOLD(IEND) = 0.0D0
      IF ( N .GE. 1 ) GO TO 10
            IER = -1
            CALL DTERR ( 1, SNAME, IER, 1)
            GO TO 100
C
  10     IF ( NDIM .GE. N ) GO TO 20
            IER = -2
            CALL DTERR ( 1, SNAME, IER, 1)
            GO TO 100
C
  20     IF ( M .GE. 1 .AND. M .LE. N  ) GO TO 30
            IER = -3
            CALL DTERR ( 1, SNAME, IER, 1)
            GO TO 100
C
  30     IF ( NHOLD .GE.   M+2 ) GO TO 40
            NEED = M+2
            IER = -4
            CALL DTERR ( 2, SNAME, IER, NEED )
            GO TO 100
C
C ... CHECK FOR ZERO COLUMN
C
  40     COLMAX = 0.0D0
         DO 50 J = 1, M
            COLMAX =  MAX  ( COLMAX, DASUM( N, A(1,J), 1) )
  50     CONTINUE
         HOLD(IEND + 1) = COLMAX
         IF ( COLMAX .GT. 0.0D0 ) GO TO 60
            IER = -5
            CALL DTERR ( 3, SNAME, IER, 1 )
            GO TO 100
C
C ... COMPUTE QR DECOMPOSITION
C
  60     CALL DQRDC ( A, NDIM, N, M, HOLD(IBEG), JDUM, DUM, 0 )
C
C ... SET CONDITION NUMBER AND CHECK FOR RANK DEFICIENCY
C
         RPERT = 1.0D0
         RMIN =  ABS ( A(1,1) )
         RMAX = RMIN
         IF ( M .LT. 2 ) GO TO 75
         DO 70 J = 2, M
            RMIN =  MIN  ( RMIN,  ABS ( A(J,J) ) )
            IMAX = DTIDMX (J, A(1,J), 1)
            RMAX =  MAX  ( RMAX,  ABS( A(IMAX, J)))
  70     CONTINUE
         RPERT = RMIN / RMAX
  75     HOLD(IEND) = RPERT
         IF ( RPERT .GT. 0.0D0 ) GO TO 80
            IER = -5
            CALL DTERR ( 3, SNAME, IER, 1 )
            GO TO 100
  80     BNRM = DASUM (N, B, 1)
C
C ...    SOLVE THE MATRIX EQUATION
C
C
         CALL DQRSL (A, NDIM, N, M, HOLD(IBEG), B, DUM, B, B, RSD, DUM,
     1              110, J)
C
C ... CHECK FOR ZERO SOLUTION
C
         XNRM = DASUM ( M, B, 1)
         IF ( XNRM .EQ. 0.0D0 ) GO TO 90
C
C ... SENSITIVITY ANALYSIS OF THE SOLUTION
C
         RNRM = DASUM ( N, RSD, 1)
         RPERT = RPERT * RPERT * COLMAX * XNRM / ( RPERT * COLMAX * XNRM
     1            + RNRM + RPERT * BNRM )
  90     CONTINUE
         IF ( RPERT .LE. 0.0D0 ) THEN
            IER = -5
            CALL DTERR ( 3, SNAME, IER, 1 )
            GO TO 100
         ENDIF
         DIGCAL = - LOG10 (RPERT)
         DIGMAX = - LOG10 (DTMCON(5))
         IF ( 3.0D0 * DIGCAL .GT.         DIGMAX ) IER = 1
         IF ( 3.0D0 * DIGCAL .GT. 2.0D0 * DIGMAX ) IER = 2
         IF ( IER .EQ. 0  ) RETURN
            CALL DTERR ( 0, SNAME, IER, 1 )
            RETURN
  100    RSD(1) = DTMCON(1)
C
C ...    END OF SUBROUTINE
C
         RETURN
         END

