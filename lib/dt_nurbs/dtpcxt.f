      SUBROUTINE DTPCXT (CURVE, PLANE, WORK, NWORK, NPTS, PTS,
     *                   NINTS, PINTS, IER)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC
CC      THE SUBROUTINE DTPCXT IS USED TO FIND ALL INTERSECTIONS OF
CC      A GIVEN CURVE WITH A PLANE.  THE CURVE MAY HAVE ANY NUMBER
CC      OF DEPENDENT VARIABLES.  IN THIS CONTEXT, "PLANE" MEANS ANY
CC      HYPERPLANE IN A SPACE WHOSE DIMENSION IS THE SAME AS THE
CC      NUMBER OF DEPENDENT VARIABLES.  THE CALLING SEQUENCE FOR THIS
CC      SUBROUTINE HAS THE FOLLOWING FORM:
CC
CC      CALL DTPCXT (CURVE, PLANE, WORK, NWORK, NPTS, PTS,
CC     *             NINTS, PINTS, IER)
CC
CC      WHERE THE PARAMETERS MEAN
CC
CC      CURVE  - THE INPUT SPLINE CURVE
CC      PLANE  - THE PLANE WITH WHICH TO INTERSECT THE CURVE
CC      WORK   - A WORK ARRAY OF LENGTH NWORK
CC      NWORK  - THE LENGTH OF THE WORK ARRAY
CC      NPTS   - THE NUMBER OF INTERSECTION POINTS FOUND
CC      PTS    - AN ARRAY OF THE PARAMETER VALUES OF THE INTERSECTIONS
CC      NINTS  - THE NUMBER OF INTERSECTION INTERVALS FOUND
CC      PINTS  - AN ARRAY OF THE INTERSECTION INTERVALS
CC      IER    - THE ERROR CONTROL FLAG
CC               IER = 0     NO ERRORS DETECTED
CC               IER = 6     SOME POINTS FOUND, ADDITIONAL ONES MAY
CC                           EXIST.  iNCREASE WORKSPACE TO FIND THEM.
CC               IER = -1    CURVE(1) <> 1
CC               IER = -2    CIN(2) = 0
CC               IER = -3    INVALID SPLINE ORDER;
CC                           CIN(1) < 1 OR CIN(1) > DTMCON(11)
CC               IER = -4    INVALID NUMBER OF b-SPLINE COEFFICIENTS
CC               IER = -5    INVALID KNOT SEQUENCE
CC               IER = -7    INSUFFICIENT WORKING STORAGE
CC               IER = -100  UNEXPECTED ERROR RETURN FROM LOWER LEVEL
CC
CC      THOMAS GRANDINE
CC      AUGUST, 1989
CC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      DOUBLE PRECISION CURVE(*), PLANE(*), WORK(*), PTS(*), PINTS(2,*)
      INTEGER NWORK, NPTS, NINTS, IER, NEED, MC, NKNOTS, NCOEFS, IX, IY
      INTEGER NDEP
      CHARACTER*8 SUBNAM
      DATA SUBNAM /'DTPCXT  '/

C----- CHECK THE INPUT FOR VALIDITY

      CALL DTERPT (0)
      CALL DTSCHK (CURVE, IER)
      IF (IER .NE. 0) GO TO 9900
      IF (CURVE(1) .NE. 1) THEN
        IER = -1
        GO TO 9900
        ENDIF

C----- DETERMINE IF ENOUGH WORKING STORAGE EXISTS FOR FIRST PASS

      NKNOTS = CURVE(3) + CURVE(4)
      NCOEFS = CURVE(4)
      NDEP = CURVE(2)
      IF (NDEP .LT. 0) NDEP = -NDEP - 1
      MC = 5 + NDEP * NCOEFS + NKNOTS
      NEED = 3 * MC + 100
      IF (NEED .GT. NWORK) THEN
        IER = -7
        GO TO 9900
        ENDIF

C----- DETERMINE THE NECESSARY SPLINE HERE

      CALL DCOPY (NKNOTS+5, CURVE, 1, WORK, 1)
      WORK(2) = 1
      DO 20 IX = 1,NCOEFS
        WORK(5+NKNOTS+IX) = 0.0D0
        DO 10 IY = 1,NDEP
          WORK(5+NKNOTS+IX) = WORK(5+NKNOTS+IX) +
     *                   PLANE(IY) * CURVE(5+NKNOTS+IX+(IY-1)*NCOEFS)
10        CONTINUE
        IF (CURVE(2) .LT. 0.0D0) THEN
          WORK(5+NKNOTS+IX) = WORK(5+NKNOTS+IX) -
     *                   PLANE(NDEP+1) * CURVE(5+NKNOTS+IX+NDEP*NCOEFS)
        ELSE
          WORK(5+NKNOTS+IX) = WORK(5+NKNOTS+IX) - PLANE(NDEP+1)
          ENDIF
20      CONTINUE

C----- NOW DETERMINE THE ZEROS OF THIS NEW SPLINE

      NEED = NWORK - MC
      CALL DTSZER (WORK, WORK(MC+1), NEED, NPTS, PTS, NINTS, PINTS, IER)
      IF (IER .LT. 0) IER = -100

C----- NOW PERFORM THE ERROR PROCESSING STEP

9900  CONTINUE
      CALL DTERPT (1)
      IF (IER .LT. 0) THEN
        IF (IER .EQ. -7) CALL DTERR (2, SUBNAM, IER, NEED)
        IF (IER .EQ. -100) CALL DTERR (5, SUBNAM, IER, 0)
        IF ((IER .NE. -7) .AND. (IER .NE. -100)) THEN
          CALL DTERR (1, SUBNAM, IER, 0)
          ENDIF
        ENDIF
      IF (IER .GT. 0) CALL DTERR (0, SUBNAM, IER, 0)
      END
