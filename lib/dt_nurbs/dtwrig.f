      SUBROUTINE DTWRIG (C, NIGES, IGES, IUSED, IER)
C***********************************************************************
C
C FUNCTION-
C          THIS ROUTINE IS USED TO CONVERT DTRC FORMAT SPLINE VECTOR
C          TO A CHARACTER ARRAY SUITABLE FOR CREATING AN IGES FILE.
C
C AUTHORS-
C          C.P.CHI             REVISION  AUGUST   1989
C
CC    DOUBLE PRECISION C(NC)
CC    CHARACTER*16 IGES(NIGES)
CC    CALL DTWRIG (C, IGES, NIGES, IUSED, IER)
CC
CC    WHERE
CC
CC    C      - A DTRC SPLINE VECTOR
CC    IGES   - AN ARRAY TO HOLD THE OUTPUT RECORDS FOR THE IGES FILE
CC    NIGES  - THE DECLARED DIMENSION OF THE ARRAY IGES
CC    IUSED  - THE NUMBER OF LINES OF OUTPUT ACTUALLY STORED IN THE
CC             ARRAY IGES
CC    IER    - THE SUCCESS / ERROR CODE
CC             IER = 0   SUCCESS
CC             IER = -1  IMPROPER SPLINE VECTOR
CC             IER = -2  IGES FORMAT CANNOT HANDLE A SPLINE VECTOR
CC                       WITH THIS GENERALITY
CC             IER = -3  NIGES NOT LARGE ENOUGH
CC
C
C REFERENCES-
C          1.
C
C NOTES-
C
C TYPE/PARAMETER/DIMENSION/COMMON/EQUIVALENCE/DATA/FORMAT STATEMENTS-
C
      INTEGER NIGES, IUSED, IER
      DOUBLE PRECISION    C(*)
      CHARACTER*16 IGES(5,NIGES)
      CHARACTER DATE(8), TIME(8),IDT*1
      INTEGER DEP, INDEP, DEG1, DEG2, K1, K2, CNTR
      INTEGER ROW, COL, J1, J2, J3, J4, J5
      DOUBLE PRECISION PARM1, PARM2, COEFMX
      DOUBLE PRECISION XHSM, R1, R2
      INTEGER I, KT, NKS, LKTPT, NPTS, NTERM, NAR, NROW, IKV, IWT, IC
      INTEGER NK1, NK2, LKNT, NCTRP, IY, IX
      INTEGER DTJCON
C
C ********************** START OF EXECUTABLE CODE **********************
C
C...THE COL AND ROW IN THE FOLLOWING CODE ARE THE COLUMNS AND ROWS OF
C   THE TRANSPOSED IGES ARRAY.
C
C...THE FIRST SIX ROWS OF DATA ARE HARD CODED DATA:
C
C         IGES(1,1) - IGES(5,1)
C         IGES(1,2) - IGES(5,2)
C         IGES(1,3) - IGES(5,3)
C         IGES(1,4) - IGES(5,4)
C         IGES(1,5) - IGES(5,5)
C         IGES(1,6) - IGES(5,6)
C
C----- STORE THE TITLE IN THE FIRST RECORD
C
      IGES(1,1) = 'OUTPUT FROM LIBR'
      IGES(2,1) = 'ARY ROUTINE ''DTI'
      IGES(3,1) = 'GES''            '
      IGES(4,1) = '                '
      IGES(5,1) = '        S0000001'
C
C----- STORE THE STUFF IN THE GLOBAL PARAMETER RECORDS
C
      IGES(1,2) = '1H,,1H;,6HSPLINE'
      IGES(2,2) = ',8HIGES.DAT,7HLI'
      IGES(3,2) = 'BRARY,5HV0.00,  '
      IGES(5,2) = '        G0000001'
      IGES(2,3) = '7HLIBRARY,1.0,1,'
      IGES(3,3) = '4HINCH,1,0.001, '
      IGES(5,3) = ',       G0000002'
      IGES(3,4) = '6HAUTHOR,12HORGA'
      IGES(4,4) = 'NIZATION,4,0;   '
      IGES(5,4) = '        G0000003'
C
C----- NOW COMPUTE VALUES OF PARAMETERS TO STUFF INTO THE REMAINDER
C
C     J1 = ALOG (FLOAT (JHMCON (3))) / ALOG (2.0) + 1.5
      J1 = ALOG (FLOAT (DTJCON (3))) / ALOG (2.0) + 1.5
C     J2 = ALOG10 (EXP (HSMCON (9))) + 0.5
      J2 = ALOG10 (EXP (88.0)) + 0.5
C     J3 = HSMCON (8) * ALOG10 (HSMCON (7)) + 0.5
      J3 = 24.0 * ALOG10 (2.0) + 0.5
C     J4 = DLOG10 (DEXP (HDMCON (9))) + 0.5
      J4 = DLOG10 (DEXP (88.0D0)) + 0.5
C     J5 = HDMCON (8) * DLOG10 (HDMCON (7)) + 0.5
      J5 = 56.0 * DLOG10 (2.0D0) + 0.5
C
C...WRITE J1 TO J4 IN COL 4, ROW 2
C   AND J5 TO COL 1, ROW 3
C
      WRITE (IGES(4,2),10) J1,J2,J3,J4
10    FORMAT (4(I3,','))
      WRITE (IGES(1,3),20) J5
20    FORMAT (I15,',')
C     WRITE (IGES(1,4),40) HSMCON (6)
      XHSM=2.0E-24
      WRITE (IGES(1,4),40) XHSM
40    FORMAT (E15.8,',')
C
C----- PUT THE DATE AND TIME STAMP INTO THE APPROPRIATE FIELD
C
C     CALL HHDATE (DATE)
C     CALL HHTIME (TIME)
C
      DO 45 I=1,8
      WRITE(IDT,'(I1)') I
      DATE(I)=IDT
      TIME(I)=IDT
   45 CONTINUE
C
      WRITE (IGES(4,3),50) DATE(7),DATE(8),DATE(1),DATE(2),DATE(4),
     &                     DATE(5),TIME(1),TIME(2),TIME(4),TIME(5),
     &                     TIME(7),TIME(8)
50    FORMAT ('13H',6A1,'.',6A1)
C
C----- LOAD UP THE DIRECTORY ENTRY PIECES
C
      IGES(2,5) = '               1'
      IGES(3,5) = IGES(4,1)
      IGES(4,5) = IGES(4,1)
      IGES(5,5) = '        D0000001'
      IGES(3,6) = IGES(4,1)
      IGES(4,6) = IGES(4,1)
      IGES(5,6) = '        D0000002'
C
C...DETERMINE OBJECT IS A SURFACE OR CURVE
C
C... C(1) DEFINES THE NO OF INDEPENDENT VARIABLES
C    C(2) DEFINES THE NO OF COEF FOR EACH CONTROL POINT
C         AND THE NO OF INDEPENDENT VARIABLES
C
      INDEP = C(1)
      IF(C(2).GT.0.0) THEN
        DEP=C(2)
      ELSE
        DEP=ABS(C(2))-1
      ENDIF
C *** MODIFIED ***
      IER = 0
      IF (INDEP.LT.1) IER = -1
      IF (DEP.LT.1) IER = -1
      IF (INDEP.GT.2) IER = -2
      IF (DEP.GT.3) IER = -2
      IF (IER.NE.0) RETURN
C
C...DEFINE STARTING POINT TO LOAD DTRC C-ARRAY INTO IGES
C
      ROW = 7
      COL = 1
      COEFMX = 0.0
C
      IF (INDEP.EQ.2) GO TO 200
C
C-----THIS IS THE CURVE FORM
C     THE ENTITY TYPE NUMBER FOR A CURVE IS 126
C     SET FLAG TO RATIONAL SPLINE CURVE, FLAG=0 AND LOAD TO IGES(1,5)
C
      IGES(1,5) = '     126       0'
      IGES(1,6) = '     126        '
C
C...DEFINE THE DEGREE OF THE CURVE
C   C(3) IS THE ORDER OF THE CURVE IN DTRC FORMAT
C
      DEG1 = C(3) - 1.0
C
C... C(4) IS THE NO OF CONTROL POINT FOR THE CURVE
C
      K1 = C(4) - 1.0
C
      WRITE (IGES(1,7),110) 126,K1,DEG1
110   FORMAT (I3,',',I4,',',I3,',   ')
C
      IF (DEP.EQ.3) THEN
        IGES(2,7) = '0,0,1,0,        '
      ELSE
        IGES(2,7) = '0,0,1,0,        '
      ENDIF
      COL = 3
C
C...LAST ELEMENT FOR HEADER IN C-ARRAY
C   AND NUMBER OF KNOTS
C
      KT=3*INDEP+2
      NKS=(K1+1)+(DEG1+1)
C
C...DEFINE LAST ELEMENT OF KNOT VECTOR IN C-ARRAY
C   AND NUMBER OF CONTROL POINT
C
      LKTPT=KT+NKS
      NPTS=K1+1
C
C...CHECK WHETHER THE SPECIFIED DIMENSION FOR IGES IS LARGE ENOUGH
C
      NTERM=NKS+NPTS*4+2
      R1=REAL(NTERM)/4.0
      R2=REAL(NTERM/4)
      IF(R1.EQ.R2) THEN
        NAR=2
      ELSE
        NAR=1
      ENDIF
C
      NROW=6+NTERM/4+NAR
      IF(NROW.GT.NIGES) THEN
        IER=-3
        GOTO 999
      ENDIF
C
C----- ADD THE KNOTS AND WEIGHTS TO THE FILE
C
      DO 120 CNTR = 1,NKS
      IKV=CNTR+KT
      CALL DTWRI1 (C(IKV), IGES, ROW, COL)
120   CONTINUE
C
C...LOAD WEIGHTS TO IGES
C   CONSIDER RATIONAL SPLINE ONLY. NUMBER OF COEF. FOR EACH
C   CONTROL POINT EQUALS NUMBER OF DEPENDENT VARIABLES PLUS ONE.
C
      DO 130 CNTR = 0,K1
      IF(C(2).LT.0.0) THEN
        IWT=LKTPT+(CNTR+1)+DEP*NPTS
        CALL DTWRI1 (C(IWT), IGES, ROW, COL)
      ELSE
        CALL DTWRI1 (1.0D0,IGES,ROW,COL)
      ENDIF
130   CONTINUE
C
C----- ADD THE COEF OF ALL CONTROL POINTS TO THE FILE. . .
C
      IF (DEP.EQ.2) GO TO 150
      IF (DEP.EQ.3) GO TO 170
C
C----- . . . FOR THE ONE DEPENDENT VARIABLE CASE
C
      PARM1 = 0.0
      DO 140 CNTR = 0,K1
      IC=KT+NKS+(CNTR+1)
      CALL DTWRI1 (PARM1, IGES, ROW, COL)
      CALL DTWRI1 (C(IC), IGES, ROW, COL)
      CALL DTWRI1 (0.0D0, IGES, ROW, COL)
      COEFMX = MAX (COEFMX, ABS (PARM1), ABS(C(IC)))
      PARM1 = PARM1 + (C(CNTR+DEG1+7) - C(CNTR+7)) / FLOAT (DEG1)
140   CONTINUE
      GO TO 190
C
C----- . . . FOR THE TWO DEPENDENT VARIABLE CASE
C
150   DO 160 CNTR = 0,K1
        CALL DTWRI1 (C(CNTR+K1+DEG1+8), IGES, ROW, COL)
        CALL DTWRI1 (C(CNTR+2*K1+DEG1+9), IGES, ROW, COL)
        CALL DTWRI1 (0.0D0, IGES, ROW, COL)
        COEFMX = MAX (COEFMX, ABS (C(CNTR+K1+DEG1+18)),
     &                        ABS (C(CNTR+2*K1+DEG1+9)))
160     CONTINUE
      GO TO 190
C
C----- . . . FOR THE THREE DEPENDENT VARIABLE CASE
C
170   DO 180 CNTR = 0,K1
        CALL DTWRI1 (C(CNTR+K1+DEG1+8), IGES, ROW, COL)
        CALL DTWRI1 (C(CNTR+2*K1+DEG1+9), IGES, ROW, COL)
        CALL DTWRI1 (C(CNTR+3*K1+DEG1+10), IGES, ROW, COL)
        COEFMX = MAX (COEFMX, ABS (C(CNTR+K1+DEG1+18)),
     &                        ABS (C(CNTR+2*K1+DEG1+9)),
     &                        ABS (C(CNTR+3*K1+DEG1+10)))
180     CONTINUE
C
C----- NOW FINISH UP THE ENTRIES FOR THE CURVE CASE
C
190   CALL DTWRI1 (C(6), IGES, ROW, COL)
      CALL DTWRI1 (C(K1+DEG1+7), IGES, ROW, COL)
      CALL DTWRI1 (0.0D0, IGES, ROW, COL)
      CALL DTWRI1 (0.0D0, IGES, ROW, COL)
      IF (DEP.EQ.3) THEN
        IGES(COL,ROW) = '            0.0;'
      ELSE
        IGES(COL,ROW) = '            1.0;'
        ENDIF
      COL = COL + 1
      GO TO 400
C
C----- THIS IS THE SURFACE FORM
C
200   IGES(1,5) = '     128       0'
      IGES(1,6) = '     128        '
      DEG1 = C(3) - 1.0
      DEG2 = C(4) - 1.0
      K1 = C(5) - 1.0
      K2 = C(6) - 1.0
      WRITE (IGES(1,7),210) 128,K1,K2
210   FORMAT (I3,',',I4,',',I4,',  ')
      WRITE (IGES(2,7),220) DEG1,DEG2
220   FORMAT (I3,',',I3,',        ')
      IGES(3,7) = '0,0,1,0,0,      '
      COL = 4
C
C...LAST ELEMENT FOR HEADER IN C-ARRAY AND
C   NUMBER OF KNOTS
C
      KT=3*INDEP+2
      NK1=(K1+1)+(DEG1+1)
      NK2=(K2+1)+(DEG2+1)
C
C...DEFINE LAST ELEMENT OF KNOT VECTOR IN C-ARRAY
C   AND NUMBER OF CONTROL POINT
C
      LKNT=KT+NK1+NK2
      NCTRP=(K1+1)*(K2+1)
C
C...CHECK WHETHER THE SPECIFIED DIMENSION FOR IGES IS LARGE ENOUGH
C
      NTERM=NK1+NK2+NCTRP*4+4
      R1=REAL(NTERM)/4.0
      R2=REAL(NTERM/4)
      IF(R1.EQ.R2) THEN
        NAR=2
      ELSE
        NAR=1
      ENDIF
C
      NROW=6+NTERM/4+NAR
      IF(NROW.GT.NIGES) THEN
        IER=-3
        GOTO 999
      ENDIF
C
C----- ADD THE KNOTS AND WEIGHTS TO THE FILE
C
      DO 230 CNTR = 1,NK1
      IKV=CNTR+KT
      CALL DTWRI1 (C(IKV), IGES, ROW, COL)
230   CONTINUE
      DO 240 CNTR = 1,NK2
        IKV=KT+NK1+CNTR
        CALL DTWRI1 (C(IKV), IGES, ROW, COL)
240     CONTINUE
      DO 250 CNTR = 1,NCTRP
      IF(C(2).LT.0.0) THEN
        IWT=LKNT+CNTR+DEP*NCTRP
        CALL DTWRI1(C(IWT),IGES,ROW,COL)
      ELSE
        CALL DTWRI1 (1.0D0, IGES, ROW, COL)
      ENDIF
250   CONTINUE
C
C----- ADD THE "CONTROL POINTS" TO THE FILE. . .
C
      IF (DEP.EQ.2) GO TO 270
      IF (DEP.EQ.3) GO TO 290
C
C----- . . . FOR THE ONE DEPENDENT VARIABLE CASE
C
      PARM2 = 0.0
      DO 260 IY = 1,K2+1
        PARM1 = 0.0
        DO 255 IX = 1,K1+1
          CNTR = (IY - 1) * (K1 + 1) + IX
          CALL DTWRI1 (PARM1, IGES, ROW, COL)
          CALL DTWRI1 (PARM2, IGES, ROW, COL)
          CALL DTWRI1 (C(CNTR+K1+K2+DEG1+DEG2+12), IGES, ROW, COL)
          COEFMX = MAX (COEFMX, ABS (PARM1), ABS (PARM2),
     &                  ABS (C(CNTR+K1+K2+DEG1+DEG2+12)))
          PARM1 = PARM1 + (C(IX+DEG1+9) - C(IX+9)) / FLOAT (DEG1)
255       CONTINUE
        PARM2 = PARM2 + (C(IY+K1+DEG1+DEG2+11) - C(IY+K1+DEG1+11))
     &                  / FLOAT (DEG2)
260     CONTINUE
      GO TO 310
C
C----- . . . FOR THE TWO DEPENDENT VARIABLE CASE
C
270   DO 280 CNTR = 1,(K1+1)*(K2+1)
        CALL DTWRI1 (C(CNTR+K1+K2+DEG1+DEG2+12), IGES, ROW, COL)
        CALL DTWRI1 (C(CNTR+K1+K2+DEG1+DEG2+12+(K1+1)*(K2+1)),
     &               IGES, ROW, COL)
        CALL DTWRI1 (0.0D0, IGES, ROW, COL)
        COEFMX = MAX (COEFMX, ABS (C(CNTR+K1+K2+DEG1+DEG2+12)),
     &           ABS (C(CNTR+K1+K2+DEG1+DEG2+12+(K1+1)*(K2+1))))
280     CONTINUE
      GO TO 310
C
C----- . . . FOR THE THREE DEPENDENT VARIABLE CASE
C
290   DO 300 CNTR = 1,(K1+1)*(K2+1)
        CALL DTWRI1 (C(CNTR+K1+K2+DEG1+DEG2+12), IGES, ROW, COL)
        CALL DTWRI1 (C(CNTR+K1+K2+DEG1+DEG2+12+(K1+1)*(K2+1)),
     &               IGES, ROW, COL)
        CALL DTWRI1 (C(CNTR+K1+K2+DEG1+DEG2+12+2*(K1+1)*(K2+1)),
     &               IGES, ROW, COL)
        COEFMX = MAX (COEFMX, ABS (C(CNTR+K1+K2+DEG1+DEG2+12)),
     &           ABS (C(CNTR+K1+K2+DEG1+DEG2+12+(K1+1)*(K2+1))),
     &           ABS (C(CNTR+K1+K2+DEG1+DEG2+12+2*(K1+1)*(K2+1))))
300     CONTINUE
C
C----- NOW FINISH UP THE ENTRIES FOR THE SURFACE CASE
C
310   CALL DTWRI1 (C(9), IGES, ROW, COL)
      CALL DTWRI1 (C(K1+DEG1+10), IGES, ROW, COL)
      CALL DTWRI1 (C(K1+DEG1+11), IGES, ROW, COL)
      WRITE (IGES(COL,ROW),320) C(K1+K2+DEG1+DEG2+12)
320   FORMAT (E15.8,';')
      COL = COL + 1
C
C----- FILL IN THE LOOSE ENDS
C
400   WRITE (IGES(2,6),410) ROW - 6
410   FORMAT (I16)
      WRITE (IGES(2,4),40) COEFMX
      WRITE (IGES(5,ROW),420) ROW - 6
420   FORMAT (' 0000001P',I7)
      DO 430 CNTR = COL,4
        IGES(CNTR,ROW) = IGES(4,1)
430     CONTINUE
      ROW = ROW + 1
      IGES(1,ROW) = 'S0000001G0000003'
      WRITE (IGES(2,ROW),440) ROW - 7
440   FORMAT ('D0000002P',I7)
      IGES(3,ROW) = IGES(4,1)
      IGES(4,ROW) = IGES(4,1)
      IGES(5,ROW) = '        T0000001'
      IUSED = ROW
  999 CONTINUE
      RETURN
      END
