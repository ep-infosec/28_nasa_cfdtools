C<*>
      SUBROUTINE DTSPD1(X,NDER,KORD,TKTS,INCK,
     1                  NCOEF,COEF,INCC,NDIMC,NRNG,
     2                  ISPAN,WORK,V,NDIMV,IER)
C
C  PURPOSE:  COMPUTE SPLINE VALUES AND DERIVS
C            FROM USER-DEFINED DATA ARRAYS.
C
C  INPUTS:
C           X       VALUE AT WHICH TO EVALUATE.
C           NDER    NUMBER OF DERIVATIVES TO COMPUTE,
C                   NDER .GE. 0.
C           KORD    ORDER OF SPLINE,
C                   KORD .GE. 0.
C           TKTS    KNOT VECTOR.
C           INCK    INCREMENT FOR KNOT VECTOR,
C                   INCK .GT. 0.
C           NCOEF   NUMBER OF B-SPLINE COEFFICIENTS FOR EACH
C                   DEPENDENT VARIABLE,
C                   NCOEF .GE. KORD.
C           COEF    ARRAY OF B-SPLINE COEFFICIENTS.
C           INCC    INCREMENT FOR COEF ARRAY,
C                   INCC .GT. 0.
C           NDIMC   FIRST DIMENSION OF COEF ARRAY,
C                   NDIMC .GE. 1++INCC*(NCOEF-1).
C           NRNG    NUMBER OF DEPENDENT VARIABLES,
C                   NRNG .GT. 0.
C           NDIMV   FIRST DIMENSION OF V ARRAY,
C                     NDIMV .GE. NRNG.
C
C  WORKING STORAGE:
C
C           WORK    DOUBLE PRECISION ARRAY OF LENGTH NWORK, WHERE
C                   NWORK .GE. KORD**2 + (3+NDER)*KORD.
C
C                   BROKEN DOWN AS FOLLOWS:
C
C                     2*KORD FOR KNOT VALUES INPUT TO DTBSP1
C                     (ND+1)*KORD FOR OUTPUT FROM DTBSP1
C                     KORD**2 FOR WORKING STORAGE
C                       PASSED TO DTBSP1
C
C                     WHEN DTSPV2 IS USED INSTEAD, FIRST 2*KORD
C                       LOCATIONS ARE USED FOR WORKING STORAGE.
C
C  INPUT/OUTPUT
C
C           ISPAN   ON INPUT, GUESS AT SPAN NUMBER IN WHICH X LIES.
C                   ON OUTPUT, TRUE SPAN NUMBER IN WHICH X LIES.
C
C  OUTPUT:
C
C           V       ARRAY CONTAINING THE SPLINE VALUES AND DERIVS.
C                   V(I,J+1) = J'TH DERIV OF THE I'TH DEPENDENT
C                                         VARIABLE.
C
C           IER     SUCCESS/ERROR CODE.
C                   IER=0     SUCCESS.
C                   IER=-8    INVALID KNOT SET.
C                   IER=-50   X OUT OF RANGE.
C                   IER=-38   ATTEMPT TO EVALUATE AT POINT THAT IS
C                             INSIDE AN INTERVAL THAT IS TOO SMALL.
C
C  SUBROUTINES CALLED:  DTSPV2,DTSPV3,DTBSP1,DTILC1,DTMCON,DTERR
C
C  AUTHOR:  A.K. JONES
C
C  DATE:  1-NOV-84
C
C  MINOR REVISIONS BY FRITZ KLEIN, 21-JAN-85
C
      DOUBLE PRECISION X,TKTS(*),COEF(NDIMC,*),V(NDIMV,*)
      DOUBLE PRECISION ZERO,WORK(*)
      EXTERNAL  DTSPV2,DTSPV3,DTBSP1,DTILC1,DTMCON,DTERR
C
      DATA ZERO / 0.D0 /
C
      NKTS = NCOEF + KORD
C
C  BREAK UP WORK ARRAY.
C
      IW1 = 1
      IW2 = IW1 + KORD
      IW3 = IW2 + KORD
C
C  FIND INTERVAL FOR EVALUATION.
C
      CALL DTSPV2(X,KORD,TKTS,INCK,NKTS,ISPAN,NEXT,IER)
      IF(IER .EQ. -50) GO TO 9900
      IK = 1 + (NEXT - KORD) * INCK
      IC = 1 + (NEXT - KORD) * INCC
      NKNOTS = 2 * KORD
      ND  = MIN0(NDER,KORD-1)
      ND1 = ND + 1
C
C  PACK KNOTS INTO CONTIGUOUS ARRAY FOR HSBSPL.
C
      IBK = ND1 * KORD + IW1
      IBW = IBK + 2 * KORD
      DO 10 I=1,NKNOTS
        IK1 = IBK + I - 1
        IK2 = IK + (I-1) * INCK
        WORK(IK1) = TKTS(IK2)
   10 CONTINUE
      CALL DTILC1(WORK(IBK),NKNOTS,KORD,IFAIL)
      IF(IFAIL .EQ. 0) GO TO 20
        IER = -8
        GO TO 9900
   20 CONTINUE
C
      IF(NRNG .GT. 3) GO TO 200
C
C  SPECIAL CASE NRNG .LE. 3.
C
      DO 100 I=1,NRNG
        CALL DTSPV3(X,KORD,TKTS(IK),INCK,COEF(IC,I),INCC,NDER,
     1            WORK(IW1),WORK(IW2),WORK(IW3),V(I,1),NDIMV,IER)
        IF (IER.NE.0) GO TO 9900
  100 CONTINUE
      GO TO 9000
C
C  CASE NRNG .GT. 3.
C
  200 CONTINUE
      IL = KORD
      CALL DTBSP1(WORK(IBK),X,IL,KORD,ND,
     1            WORK(IBW),WORK(IW1),IL)
C
C  B-SPLINE VALUES AND DERIVS NOW IN WORK(1..ND1*KORD).
C  FORM INNER PRODUCTS.
C
  300 CONTINUE
      DO 600 K=1,ND1
      DO 500 I=1,NRNG
        V(I,K) = 0.
        DO 400 J=1,KORD
          JC = IC + (J-1)*INCC
          JW = J + (K-1) * KORD
          V(I,K) = V(I,K) + COEF(JC,I) * WORK(JW)
  400   CONTINUE
  500 CONTINUE
  600 CONTINUE
C
C  IF NDER .GE. KORD, ZERO OUT ALL HIGHER-ORDER DERIVATIVES.
C
      IF(NDER .LT. ND1) GO TO 810
      DO 800 K=ND1,NDER
        DO 700 I=1,NRNG
          V(I,K+1) = ZERO
  700   CONTINUE
  800 CONTINUE
  810 CONTINUE
C
C  NORMAL EXIT.
C
 9000 CONTINUE
      IER = 0
      ISPAN = NEXT
C
C  ERROR EXITS.
C
 9900 CONTINUE
      RETURN
      END
