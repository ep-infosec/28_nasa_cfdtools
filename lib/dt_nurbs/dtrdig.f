*DECK DTRDIG
CDTRDIG
C**********************************************************************
      SUBROUTINE DTRDIG (IGES, NDTRC, C, ITERM, IER)
C***********************************************************************
C
C FUNCTION-
C          THIS ROUTINE IS USED TO CONVERT IGES FORMAT SPLINE DATA
C          TO A DTRC FORMAT C-ARRAY.
C
C AUTHORS-
C          C.P.CHI             REVISION  AUGUST   1989
C
CC    DOUBLE PRECISION C(NC)
CC    CHARACTER*80 IGES(*)
CC
CC    WHERE
CC
CC    IGES   - AN ARRAY TO HOLD THE INPUT RECORDS FOR THE IGES FILE
CC    C      - A SPLINE VECTOR IN DTRC FORMAT
CC    NDTRC  - THE SPECIFIED DIMENSION OF C-ARRAY IN DTRC FORMAT
CC    ITERM  - NUMBER OF EFFECTIVE ELEMENTS IN DTRC C-ARRAY
CC    IER    - THE SUCCESS / ERROR CODE
CC             IER = 0   SUCCESS
CC             IER = -1  IMPROPER SPLINE VECTOR
CC             IER = -2  IGES FORMAT CANNOT HANDLE A SPLINE VECTOR
CC                       WITH THIS GENERALITY
CC             IER = -3  NDTRC NOT LARGE ENOUGH
CC
C
C REFERENCES-
C          1.
C
C NOTES-
C
C TYPE/PARAMETER/DIMENSION/COMMON/EQUIVALENCE/DATA/FORMAT STATEMENTS-
C
      INTEGER IER
      DOUBLE PRECISION C(NDTRC)
      CHARACTER*16 IGES(5,*)
      INTEGER DEP, INDEP, DEG1, DEG2, K1, K2, CNTR
      INTEGER ROW, COL
      DOUBLE PRECISION COEFMX
C
C ********************** START OF EXECUTABLE CODE **********************
C
C...THE COL AND ROW IN THE FOLLOWING CODE ARE THE COLUMNS AND ROWS OF
C   THE TRANSPOSED IGES ARRAY.
C
C...THE FIRST SIX ROWS OF IGES DATA ARE HARD CODED DATA:
C   AND ARE NEGLECTED.
C
C         IGES(1,1) - IGES(5,1)
C         IGES(1,2) - IGES(5,2)
C         IGES(1,3) - IGES(5,3)
C         IGES(1,4) - IGES(5,4)
C         IGES(1,5) - IGES(5,5)
C         IGES(1,6) - IGES(5,6)
C
C...SKIP THE FIRST SIX ROWS OF DATA
C
C...DEFINE THE STARTING POINT OF IGES ARRAY FOR LOADING DATA INTO
C   DTRC C-ARRAY
C
      ROW = 7
      COL = 1
      COEFMX = 0.0
C
      READ (IGES(1,7)(1:3),'(I3)') INDX
      READ (IGES(1,7)(5:8),'(I4)') K1
      READ (IGES(1,7)(10:13),'(I4)') DEG1
C
C...DEFINE THE NUMBER OF INDEPENDENT VARIABLES
C   C(1) IN DTRC FORMAT AND DETERMINE OBJECT IS A CURVE OR SURFACE
C
      IF(INDX.EQ.126) THEN
        INDEP=1
      ELSE
        INDEP=2
      ENDIF
      C(1)=INDEP
C
C...CONSIDER RATIONAL SPLINE ONLY
C
      C(2)=-4
      DEP=3
C     IF(IGES(2,7) .EQ. '0,0,1,0,        ') DEP=3
C     IF(IGES(2,7) .EQ. '1,0,1,0,        ') DEP=2
C
C...CHECK INITIAL DATA
C
      IER = 0
      IF (INDEP.LT.1) IER = -1
      IF (DEP.LT.1) IER = -1
      IF (INDEP.GT.2) IER = -2
      IF (DEP.GT.3) IER = -2
      IF (IER.NE.0) RETURN
C
      IF(INDEP.EQ.2) GOTO 200
C
C...DEFINE THE DEGREE OF THE CURVE
C   C(3) IS THE ORDER OF THE CURVE IN DTRC FORMAT
C
      C(3)=DBLE(DEG1)+1.0D0
C
C... C(4) IS THE NO OF CONTROL POINT FOR THE CURVE
C
      C(4)=DBLE(K1)+1.0D0
C
      C(5)=1.0
      COL = 3
C
C...LAST ELEMENT FOR HEADER IN C-ARRAY
C   AND NUMBER OF KNOTS
C
      KT=3*INDEP+2
      NKS=(K1+1)+(DEG1+1)
C
C...DEFINE LAST ELEMENT OF KNOT VECTOR IN C-ARRAY
C   AND NUMBER OF CONTROL POINT
C
      LKTPT=KT+NKS
      NPTS=K1+1
C
C...NUMBER OF EFFECTIVE ELEMENTS IN C-ARRAY
C
      ITERM=KT+NKS+NPTS*(DEP+1)
C
C...CHECK WHETHER THE SPECIFIED C-ARRAY DIMENSION IS LARGE ENOUGH
C
      IF(ITERM.GT.NDTRC) THEN
        IER=-3
        GOTO 999
      ENDIF
C
C----- ADD THE KNOTS AND WEIGHTS TO DTRC C-ARRAY
C
      DO 120 CNTR = 1,NKS
      IKV=CNTR+KT
      CALL DTRDI1 (IGES, ROW, COL, C(IKV))
120   CONTINUE
C
C...LOAD WEIGHTS TO DTRC C-ARRAY
C   CONSIDER RATIONAL SPLINE ONLY. NUMBER OF COEF. FOR EACH
C   CONTROL POINT EQUALS NUMBER OF DEPENDENT VARIABLES PLUS ONE.
C
      DO 130 CNTR = 0,K1
      IWT=LKTPT+(CNTR+1)+DEP*NPTS
      CALL DTRDI1 (IGES, ROW, COL, C(IWT))
130   CONTINUE
C
C----- ADD THE COEF OF ALL CONTROL POINTS TO THE C-ARRAY. . .
C
C
C----- . . . FOR THE THREE DEPENDENT VARIABLE CASE
C
170   DO 180 CNTR = 0,K1
      CALL DTRDI1 (IGES, ROW, COL,C(CNTR+K1+DEG1+8))
      CALL DTRDI1 (IGES, ROW, COL,C(CNTR+2*K1+DEG1+9))
      CALL DTRDI1 (IGES, ROW, COL,C(CNTR+3*K1+DEG1+10))
        COEFMX = MAX (COEFMX, ABS (C(CNTR+K1+DEG1+8)),
     &                        ABS (C(CNTR+2*K1+DEG1+9)),
     &                        ABS (C(CNTR+3*K1+DEG1+10)))
180     CONTINUE
C
      GOTO 999
C
  200 CONTINUE
C
C----- THIS IS THE SURFACE FORM
C
      READ (IGES(1,7)(1:3),'(I3)') INDX
      READ (IGES(1,7)(5:8),'(I4)') K1
      READ (IGES(1,7)(10:13),'(I4)') K2
C
      READ (IGES(2,7)(1:3),'(I3)') DEG1
      READ (IGES(2,7)(5:7),'(I3)') DEG2
      C(3)=DBLE(DEG1)+1.0D0
      C(4)=DBLE(DEG2)+1.0D0
      C(5)=DBLE(K1)+1.0D0
      C(6)=DBLE(K2)+1.0D0
C
      C(7)=1.0
      C(8)=1.0
C
C     IGES(3,7) = '0,0,1,0,0,      '
      COL = 4
C
C...LAST ELEMENT FOR HEADER IN C-ARRAY AND
C   NUMBER OF KNOTS
C
      KT=3*INDEP+2
      NK1=(K1+1)+(DEG1+1)
      NK2=(K2+1)+(DEG2+1)
C
C...DEFINE LAST ELEMENT OF KNOT VECTOR IN C-ARRAY
C   AND NUMBER OF CONTROL POINT
C
      LKNT=KT+NK1+NK2
      NCTRP=(K1+1)*(K2+1)
C
C...NUMBER OF EFFECTIVE ELEMENTS IN C-ARRAY
C
      ITERM=KT+NK1+NK2+NCTRP*(DEP+1)
C
C...CHECK WHETHER THE SPECIFIED C-ARRAY DIMENSION IS LARGE ENOUGH
C
      IF(ITERM.GT.NDTRC) THEN
        IER=-3
        GOTO 999
      ENDIF
C
C----- ADD THE KNOTS AND WEIGHTS TO THE C-ARRAY
C
      DO 230 CNTR = 1,NK1
      IKV=CNTR+KT
      CALL DTRDI1 (IGES, ROW, COL, C(IKV))
230   CONTINUE
      DO 240 CNTR = 1,NK2
        IKV=KT+NK1+CNTR
        CALL DTRDI1 (IGES, ROW, COL, C(IKV))
240     CONTINUE
      DO 250 CNTR = 1,NCTRP
      IWT=LKNT+CNTR+DEP*NCTRP
      CALL DTRDI1 (IGES, ROW, COL, C(IWT))
250   CONTINUE
C
C...LOAD THE COEF. FOR ALL CONTROL POINT INTO C-ARRAY
C
C     IF (DEP.EQ.2) GO TO 270
C     IF (DEP.EQ.3) GO TO 290
C
C----- . . . FOR THE THREE DEPENDENT VARIABLE CASE
C
290   DO 300 CNTR = 1,(K1+1)*(K2+1)
      CALL DTRDI1 (IGES, ROW, COL,C(CNTR+K1+K2+DEG1+DEG2+12))
      CALL DTRDI1 (IGES, ROW, COL,
     $ C(CNTR+K1+K2+DEG1+DEG2+12+(K1+1)*(K2+1)))
      CALL DTRDI1 (IGES, ROW, COL,
     $ C(CNTR+K1+K2+DEG1+DEG2+12+2*(K1+1)*(K2+1)))
        COEFMX = MAX (COEFMX, ABS (C(CNTR+K1+K2+DEG1+DEG2+12)),
     &           ABS (C(CNTR+K1+K2+DEG1+DEG2+12+(K1+1)*(K2+1))),
     &           ABS (C(CNTR+K1+K2+DEG1+DEG2+12+2*(K1+1)*(K2+1))))
300     CONTINUE
C
  999 CONTINUE
      RETURN
      END
